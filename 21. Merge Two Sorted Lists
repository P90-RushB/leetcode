//此题是比较常见的两个有序链表合为一个有序链表的题。 有趣的是见到的一种递归的做法（第二种）

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
     ListNode p=l1,q=l2;
        ListNode s=new ListNode(0);
        ListNode w=s;
        while(p!=null&&q!=null)
        {
            if(p.val<=q.val)
            {
                s.next=new ListNode(p.val);
                p=p.next;
                
            }
            else{
                s.next=new ListNode(q.val);
                q=q.next;
                
            }
            s=s.next;
        }
        while(p!=null)
        {
            s.next=new ListNode(p.val);
            s=s.next;
            p=p.next;
        }
        while(q!=null)
        {
            s.next=new ListNode(q.val);
            s=s.next;
            q=q.next;
        }
        return w.next;
    }
}




//第二种
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        ListNode head = (l1.val < l2.val) ? l1 : l2;
        ListNode nonhead = (l1.val < l2.val) ? l2:l1;
        head.next = MergeTwoLists(head.next,nonhead);
        return head;
    }
