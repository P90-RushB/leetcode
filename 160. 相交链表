编写一个程序，找到两个单链表相交的起始节点。

 

例如，下面的两个链表：

A:          a1 → a2
                   ↘
                     c1 → c2 → c3
                   ↗            
B:     b1 → b2 → b3


此题较简单，分别遍历两条链表，然后记录长度。然后将较长的链表中向右移两者长度差，然后遍历比较直到两者相等。
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode GetIntersectionNode(ListNode headA, ListNode headB) {
      int i=0,j=0;
        ListNode a=headA,b=headB;
        while(a!=null)
        {
            i++;
            a=a.next;
        }
        while(b!=null)
        {
            j++;
            b=b.next;
        }
        a=headA;
        b=headB;
        if(i>j)
        {
            int h=i-j;
            while(h>0)
            {
                h--;
                a=a.next;
            }
        }
        else if(i<j)
        {
            int h=j-i;
            while(h>0)
            {
                h--;
                b=b.next;
            }
        }
            while(a!=b)
            {
                a=a.next;
                b=b.next;
            }
        
        return a;
        
    }
}
