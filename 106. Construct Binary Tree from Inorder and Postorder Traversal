/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode BuildTree(int[] inorder, int[] postorder) {
       return recu(postorder.Length-1,0,inorder.Length-1,inorder,postorder); 
    }
    TreeNode recu(int post,int instart,int inend,int[] inorder,int[] postorder){
        if(post<0||inend-instart<0)
            return null;
        TreeNode root=new TreeNode(postorder[post]);
        int index=0;
        for(int x=instart;x<=inend;x++){
            if(inorder[x]==postorder[post])
              index=x;  
        }
      
            
     
            root.left=recu(post-(inend-index+1),instart,index-1,inorder,postorder);
            root.right=recu(post-1,index+1,inend,inorder,postorder);
        
        
        return root;
    }
}
//已知中序和后序数组，构建树，原理和105一样，有讲解。
