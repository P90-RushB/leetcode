public void Merge(int[] nums1, int m, int[] nums2, int n) {
        int t=m+n-1;
        m--;
        n--;
        while(m>=0&&n>=0)
        {
            if(nums1[m]>nums2[n])
                nums1[t--]=nums1[m--];
            else
                nums1[t--]=nums2[n--];
            
        }
        while(n>=0)
        {
            nums1[t--]=nums2[n--];
        }
        
    }
    
    //此题给两个有序数组，并用m，n指定两个数组中前m or n个元素是初始化过的，将第二个数组的前n个值插入第一个数组中，仍保持第一个数组有序（假定第一个
    //数组的长度大于或等于m+n）
    
    //算法：对第一个数组的最后一个元素开始倒着遍历，每次将数组一的末位与数组二的末位比较大者赋给数组一最后位，然后最后位递减，赋值位也递减。
    当第一个while循环结束后，若是因为m<0而结束，则需要将第二个数组中剩余的元素也赋值进数组一（即第二个while）。  若是因为n<0而结束，那就不用
    //再动，已经完成。
